/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import UpperEssential.UpperEssentialLookAndFeel;
import auxiliares.TablaModeloNoEdit;
import baseDatos.OperacionesBaseDatos;
import java.awt.Frame;
import java.awt.GraphicsEnvironment;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import modelo.DatosClinicos;
import modelo.Paciente;
import modelo.PacienteReport;
import net.sf.jasperreports.engine.JRException;


/**
 *
 * @author agg
 */
public class VistaPacienteGeneral extends javax.swing.JDialog {

    private Paciente paciente;
    private Frame parent;
    private OperacionesBaseDatos op;
    /**
     * Creates new form VistaPacienteGeneral
     */
    public VistaPacienteGeneral(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public VistaPacienteGeneral(java.awt.Frame parent, boolean modal,Paciente paciente) throws UnsupportedLookAndFeelException, IOException {
        super(parent, modal);
         UIManager.setLookAndFeel(new UpperEssentialLookAndFeel());
        initComponents();
        this.setLocationRelativeTo(null);
        this.setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds()); 
        this.paciente=paciente;
        this.parent=parent;
        op=new OperacionesBaseDatos();
        textNombre.setEditable(false);
        textApellidos.setEditable(false);
        rellenarCampos();
        if(paciente.getDatosClinicos()!=null){
        if(paciente.getDatosClinicos().isDeportista()){
            menuPliegue.setVisible(true);
            inMedidasPliegue.setVisible(true);
        }else{
             menuPliegue.setVisible(false);
             inMedidasPliegue.setVisible(false);
        }
        }
    }

    public void rellenarCampos() throws IOException{
        imagen.setIcon(staticas.MetodosUtiles.getImagenGrande(paciente.getFoto()));
        textNombre.setText(paciente.getNombre());
        textApellidos.setText(paciente.getApellidos());
        if (paciente.getDatosClinicos() != null) {
            if (paciente.getMedidasNormales() != null) {
                staticas.Graficas.GraficaMedidasNormalesTotalPeso(panelGrafica, labelGrafica, paciente.getDni());
                recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getMedidasTablaAnyo(comboMedidas.getSelectedItem().toString(), paciente));
            }
            
        }
            
    }
    
   
    
    public void recargarTabla(String tipoMedida,List<Object[]> medidas){
        TablaModeloNoEdit model=new TablaModeloNoEdit();
            model.addColumn("Fecha");
            model.addColumn(tipoMedida);
            for(int i=0;i<medidas.size();i++){
                model.addRow(medidas.get(i));
            }
            tabla.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        Paciente = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        imagen = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        textNombre = new javax.swing.JTextField();
        textApellidos = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jSeparator5 = new javax.swing.JSeparator();
        comboMedidas = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboboxPeriodo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        botonVerGrafica = new javax.swing.JButton();
        panelGrafica = new javax.swing.JPanel();
        labelGrafica = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        inDatosClinicos = new javax.swing.JMenuItem();
        intMedidasNormales = new javax.swing.JMenuItem();
        inMedidasPliegue = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        verDatosClinicos = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        menuDatosCliente = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuPliegue = new javax.swing.JMenuItem();
        menuCalculos = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        reporteMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Paciente.setFont(Paciente.getFont().deriveFont(Paciente.getFont().getStyle() | java.awt.Font.BOLD, Paciente.getFont().getSize()+18));
        Paciente.setText("Paciente");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel1.setText("Nombre");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel2.setText("Apellidos");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel3.setText("DATOS");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31)
                        .addComponent(textApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(37, 37, 37)
                        .addComponent(textNombre)))
                .addGap(36, 36, 36))
            .addComponent(jSeparator4)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(3, 3, 3)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        comboMedidas.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        comboMedidas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Peso", "Cintura", "Grasa %", "Imc" }));

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel4.setText("Medidas");

        comboboxPeriodo.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        comboboxPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Anual", "Trimestral" }));
        comboboxPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxPeriodoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel6.setText("Periodo");

        botonVerGrafica.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        botonVerGrafica.setText("VER");
        botonVerGrafica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVerGraficaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(comboMedidas, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(comboboxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(134, 134, 134))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonVerGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboMedidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboboxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonVerGrafica)
                .addGap(31, 31, 31))
        );

        panelGrafica.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelGrafica, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Paciente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Paciente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        jMenu1.setText("INSERTAR");

        inDatosClinicos.setText("Datos Clínicos");
        inDatosClinicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inDatosClinicosActionPerformed(evt);
            }
        });
        jMenu1.add(inDatosClinicos);

        intMedidasNormales.setText("Medidas");
        intMedidasNormales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intMedidasNormalesActionPerformed(evt);
            }
        });
        jMenu1.add(intMedidasNormales);

        inMedidasPliegue.setText("Medidas de pliegues");
        inMedidasPliegue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inMedidasPliegueActionPerformed(evt);
            }
        });
        jMenu1.add(inMedidasPliegue);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("VER");

        verDatosClinicos.setText("Datos clínicos");
        verDatosClinicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verDatosClinicosActionPerformed(evt);
            }
        });
        jMenu2.add(verDatosClinicos);
        jMenu2.add(jSeparator6);

        menuDatosCliente.setText("Datos personales");
        menuDatosCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDatosClienteActionPerformed(evt);
            }
        });
        jMenu2.add(menuDatosCliente);

        jMenuItem1.setText("Medidas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        menuPliegue.setText("Medidas pliegues");
        menuPliegue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPliegueActionPerformed(evt);
            }
        });
        jMenu2.add(menuPliegue);

        menuCalculos.setText("Calculos Paciente");
        menuCalculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCalculosActionPerformed(evt);
            }
        });
        jMenu2.add(menuCalculos);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("REPORTE");

        reporteMenu.setText("Generar");
        reporteMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporteMenuActionPerformed(evt);
            }
        });
        jMenu3.add(reporteMenu);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inDatosClinicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inDatosClinicosActionPerformed
        try {
            DatosClinicosDialogo clinicos=new DatosClinicosDialogo(parent, rootPaneCheckingEnabled, paciente);
            clinicos.setVisible(rootPaneCheckingEnabled);
            
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_inDatosClinicosActionPerformed

    private void botonVerGraficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVerGraficaActionPerformed
        String medida = comboMedidas.getSelectedItem().toString();
        String periodo = comboboxPeriodo.getSelectedItem().toString();
        if (paciente.getDatosClinicos() != null && paciente.getMedidasNormales() != null) {
            
                if (medida.equalsIgnoreCase("Peso") && periodo.equalsIgnoreCase("Anual")) {
                    staticas.Graficas.GraficaMedidasNormalesTotalPeso(panelGrafica, labelGrafica, paciente.getDni());
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getMedidasTablaAnyo(comboMedidas.getSelectedItem().toString(), paciente));
                } else if (medida.equalsIgnoreCase("Cintura") && periodo.equalsIgnoreCase("Anual")) {
                    staticas.Graficas.GraficaMedidasNormalesTotalCintura(panelGrafica, labelGrafica, paciente.getDni());
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getMedidasTablaAnyo(comboMedidas.getSelectedItem().toString(), paciente));
                } else if(medida.equalsIgnoreCase("Peso") && periodo.equalsIgnoreCase("Trimestral")){
                    staticas.Graficas.graficaMedidasNormalesUltimoTrimestrePeso(panelGrafica, labelGrafica, paciente.getDni());
                    //// aqui queda cambiar metodo por el de trimestre
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getMedidasNormalesTablaTrimestre(comboMedidas.getSelectedItem().toString(), paciente));
                }else if(medida.equalsIgnoreCase("Cintura") && periodo.equalsIgnoreCase("Trimestral")){
                    staticas.Graficas.graficaMedidasNormalesUltimoTrimestreCintura(panelGrafica, labelGrafica, paciente.getDni());
                    //// aqui queda cambiar metodo por el de trimestre
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getMedidasNormalesTablaTrimestre(comboMedidas.getSelectedItem().toString(), paciente));
                }else if (medida.equalsIgnoreCase("Imc") && periodo.equalsIgnoreCase("Anual")) {
                    staticas.Graficas.GraficaMedidasNormalesTotalImc(panelGrafica, labelGrafica, paciente.getDni());
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getMedidasTablaAnyo(comboMedidas.getSelectedItem().toString(), paciente));
                }else if (medida.equalsIgnoreCase("Imc") && periodo.equalsIgnoreCase("Trimestral")) {
                    staticas.Graficas.graficaImcsUltimoTrimestreGrasa(panelGrafica, labelGrafica, paciente.getDni());
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getMedidasNormalesTablaTrimestre(comboMedidas.getSelectedItem().toString(), paciente));
                }
                
              if(paciente.getDatosClinicos().isDeportista()){
                  if (medida.equalsIgnoreCase("Grasa %") && periodo.equalsIgnoreCase("Anual")) {
                    staticas.Graficas.GraficaMedidasPligueGrasa(panelGrafica, labelGrafica, paciente.getDni(),paciente.getSexo());
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getGrasaPliegueTablaAnyo(paciente));
                } else if(medida.equalsIgnoreCase("Grasa %") && periodo.equalsIgnoreCase("Trimestral")){
                    staticas.Graficas.graficaMedidasPliegueUltimoTrimestrePorcentajeGrasa(panelGrafica, labelGrafica, paciente.getDni(),paciente.getSexo());
                    //// aqui queda cambiar metodo por el de trimestre
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getGrasaPliegueTablaTrimestre(paciente));
                }
              }else{
                   if (medida.equalsIgnoreCase("Grasa %") && periodo.equalsIgnoreCase("Anual")) {
                    staticas.Graficas.GraficaMedidasNormalesTotalGrasa(panelGrafica, labelGrafica, paciente.getDni());
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getMedidasTablaAnyo(comboMedidas.getSelectedItem().toString(), paciente));
                } else if(medida.equalsIgnoreCase("Grasa %") && periodo.equalsIgnoreCase("Trimestral")){
                    staticas.Graficas.graficaMedidasNormalesUltimoTrimestreGrasa(panelGrafica, labelGrafica, paciente.getDni());
                   
                    recargarTabla(comboMedidas.getSelectedItem().toString(), staticas.MetodosUtiles.getMedidasNormalesTablaTrimestre(comboMedidas.getSelectedItem().toString(), paciente));
                }
              }  
            
        }
    }//GEN-LAST:event_botonVerGraficaActionPerformed

    private void intMedidasNormalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intMedidasNormalesActionPerformed
        try {
            MedidasNormalesDialogo normales=new MedidasNormalesDialogo(parent, rootPaneCheckingEnabled, paciente);
            normales.setVisible(rootPaneCheckingEnabled);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_intMedidasNormalesActionPerformed

    private void inMedidasPliegueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inMedidasPliegueActionPerformed
        try {
            MedidasPliegueDialogo pliegue=new MedidasPliegueDialogo(parent, rootPaneCheckingEnabled, paciente);
            pliegue.setVisible(rootPaneCheckingEnabled);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_inMedidasPliegueActionPerformed

    private void verDatosClinicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verDatosClinicosActionPerformed
        try {
            DatosClinicosDialogo clinicos=new DatosClinicosDialogo(parent, rootPaneCheckingEnabled, paciente.getDatosClinicos());
            clinicos.setVisible(rootPaneCheckingEnabled);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_verDatosClinicosActionPerformed

    private void menuDatosClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDatosClienteActionPerformed
        try {
            DatosPacienteDialogo dialogoPaciente= new DatosPacienteDialogo(parent, rootPaneCheckingEnabled, paciente);
            dialogoPaciente.setVisible(rootPaneCheckingEnabled);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuDatosClienteActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            TablaMedidasDialogo tablaDialogo=new TablaMedidasDialogo(parent, rootPaneCheckingEnabled, paciente.getDni());
            tablaDialogo.setVisible(rootPaneCheckingEnabled);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void menuPliegueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPliegueActionPerformed
        
        try {
            TablaMedidasPliegueDialogo tablaDialogo=new TablaMedidasPliegueDialogo(parent, rootPaneCheckingEnabled, paciente.getDni());
            tablaDialogo.setVisible(rootPaneCheckingEnabled);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuPliegueActionPerformed

    private void menuCalculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCalculosActionPerformed
        try {
            CalculosPacienteDialogo calculo=new CalculosPacienteDialogo(parent, rootPaneCheckingEnabled, paciente);
            calculo.setVisible(rootPaneCheckingEnabled);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuCalculosActionPerformed

    private void comboboxPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxPeriodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxPeriodoActionPerformed

    private void reporteMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporteMenuActionPerformed
        paciente.setMedidasNormales(op.getMedidasNormalesPaciente(paciente.getDni()));
        
        try {
            try {
                InputStream ruta=this.getClass().getResourceAsStream("/recursos/reportePaciente.jasper");
                ireport.ManejoDatosPaciente.generarReporte(paciente,  parent,ruta);
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(parent, "Fallo al exportar en: "+ex.getMessage());            } catch (IOException ex) {
                Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (JRException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reporteMenuActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            TablaPacientes pacientes=new TablaPacientes(parent, rootPaneCheckingEnabled);
            pacientes.setVisible(rootPaneCheckingEnabled);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VistaPacienteGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPacienteGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPacienteGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPacienteGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPacienteGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VistaPacienteGeneral dialog = new VistaPacienteGeneral(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Paciente;
    private javax.swing.JButton botonVerGrafica;
    private javax.swing.JComboBox<String> comboMedidas;
    private javax.swing.JComboBox<String> comboboxPeriodo;
    private javax.swing.JLabel imagen;
    private javax.swing.JMenuItem inDatosClinicos;
    private javax.swing.JMenuItem inMedidasPliegue;
    private javax.swing.JMenuItem intMedidasNormales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JLabel labelGrafica;
    private javax.swing.JMenuItem menuCalculos;
    private javax.swing.JMenuItem menuDatosCliente;
    private javax.swing.JMenuItem menuPliegue;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.JMenuItem reporteMenu;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField textApellidos;
    private javax.swing.JTextField textNombre;
    private javax.swing.JMenuItem verDatosClinicos;
    // End of variables declaration//GEN-END:variables
}
